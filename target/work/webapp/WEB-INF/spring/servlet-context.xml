<?xml version="1.0" encoding="UTF-8"?>  
<beans  xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:context="http://www.springframework.org/schema/context"    
        xmlns:mvc="http://www.springframework.org/schema/mvc"    
        xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">  
      
      
        <!-- 自动扫描的包名 -->  
        <context:component-scan base-package="com.qihoo.toolkit.*" ></context:component-scan>  
          
        <!-- 默认的注解映射的支持 -->
        <mvc:annotation-driven />
        
        <!-- 文件上传 -->
	 	<!--bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"-->
	 	<bean id="multipartResolver" class="com.qihoo.toolkit.MyCommonsMultipartResolver">
	   		<!-- 设置上传文件的最大尺寸为1MB -->
	   		<property name="maxUploadSize">
	       		<value>10000000</value>
	   		</property>
	  	</bean>
          
        <!-- 视图解释类 -->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
            <property name="prefix" value="/WEB-INF/jsp/"/>  
            <property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->  
        </bean>
        
        <!-- SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 -->  
	    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	        <property name="exceptionMappings">  
	            <props>  
	                <!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
	                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>  
	            </props>  
	        </property>  
	    </bean>  
	    <!-- 配置quartz定时器 -->  
	    <bean id="testJob" class="com.qihoo.toolkit.generatepic.service.CleanFileJob"/>   
	   
	    <bean id="testJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
	        <property name="targetObject" ref="testJob"/> 
	        <property name="targetMethod" value="execute"/>
	        <property name="concurrent" value="false"/>
	        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->  
		</bean> 
		 
		<bean id="testTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	       <property name="jobDetail" ref="testJobDetail"/>  
	       <property name="cronExpression" value="0 0 18 ? * SAT"/><!-- 每周星期六下午6点实行一次 -->  
		</bean>
	    
	    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	       <property name="triggers">  
	           <list>  
	              <ref bean="testTrigger"/>  
	           </list>  
	       </property>  
	       <property name="autoStartup" value="true"/>  
		 </bean>  
		
		
		
        <!-- 对静态资源文件的访问 -->  
        <mvc:resources mapping="/image/**" location="/image/" cache-period="31556926"/>
        <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
        <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
        <mvc:resources mapping="/upload/**" location="/upload/" cache-period="31556926"/>
      
</beans>